[{"C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\index.js":"1","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\App.js":"2","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\reportWebVitals.js":"3","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\redux\\reducers\\index.js":"4","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\redux\\reducers\\user_reducer.js":"5","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\redux\\actions\\types.js":"6","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\firebase.js":"7","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\component\\Join.js":"8","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\component\\Loading.js":"9","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\redux\\actions\\user_action.js":"10","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\component\\Login.js":"11","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\component\\Main.js":"12","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\component\\AddPop.js":"13","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\component\\WordList.js":"14"},{"size":930,"mtime":1618460877451,"results":"15","hashOfConfig":"16"},{"size":3036,"mtime":1618810416862,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1615867807607,"results":"18","hashOfConfig":"16"},{"size":163,"mtime":1618447835079,"results":"19","hashOfConfig":"16"},{"size":558,"mtime":1618447839439,"results":"20","hashOfConfig":"16"},{"size":92,"mtime":1618447860610,"results":"21","hashOfConfig":"16"},{"size":534,"mtime":1618462076868,"results":"22","hashOfConfig":"16"},{"size":5369,"mtime":1618538408039,"results":"23","hashOfConfig":"16"},{"size":210,"mtime":1618461827803,"results":"24","hashOfConfig":"16"},{"size":235,"mtime":1618447859691,"results":"25","hashOfConfig":"16"},{"size":4653,"mtime":1618467154954,"results":"26","hashOfConfig":"16"},{"size":1001,"mtime":1618994786225,"results":"27","hashOfConfig":"16"},{"size":1317,"mtime":1618966105178,"results":"28","hashOfConfig":"16"},{"size":1077,"mtime":1619397997077,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"plv9db",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\index.js",[],["62","63"],"C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\App.js",["64","65","66"],"import React, { useEffect, useState } from \"react\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport './custom_antd.less';\nimport \"./App.css\";\nimport Join from \"./component/Join\";\nimport Login from \"./component/Login\";\nimport Main from \"./component/Main\";\nimport Loading from \"./component/Loading\";\nimport { Layout, Button, BackTop } from \"antd\";\nimport firebase from \"./firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { setUser, clearUser } from \"./redux/actions/user_action\";\nimport * as antIcon from \"react-icons/ai\";\n\n\n\nconst { Sider, Content, Header } = Layout;\nfunction App(props) {\n\n  let history = useHistory();\n  let dispatch = useDispatch();\n  const isLoading = useSelector((state) => state.user.isLoading);\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        history.push(\"/\");\n        dispatch(setUser(user));\n      } else {\n        history.push(\"/login\");\n        dispatch(clearUser());\n      }\n    });\n  }, []);\n  \n\n  // 스크롤 이벤트 핸들러\n  const [TopFix, setTopFix] = useState(false);\n  const [TopFixLeft, setTopFixLeft] = useState(false);\n  const handleScroll = () => {\n    let scrollTop = document.documentElement.scrollTop;\n    if (scrollTop >= 100) {\n      setTopFixLeft(true);\n    } else {\n      setTopFixLeft(false);\n    }\n    if (scrollTop >= 70) {\n      setTopFix(true);\n    } else {\n      setTopFix(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  });\n  if (isLoading) {\n    return (\n      <>\n        <Layout className={TopFix && \"top-fix\"}>\n          <Header className=\"header-box\">\n            <Link to=\"/join\">\n                join\n            </Link>\n          </Header>\n          <Layout>\n            <div className=\"content-box\">\n              \n              <Content>\n                <Loading />\n              </Content>\n            </div>\n          </Layout>\n        </Layout>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Layout className={TopFix && \"top-fix\"}>\n          <Header className=\"header-box\">\n            <Link to=\"/join\">\n                join\n            </Link>\n          </Header>\n          <Layout>\n            <div className=\"content-box\">              \n              <Content>\n                <Switch>\n                  <Route exact path=\"/login\" component={Login} />\n                  <Route exact path=\"/join\" component={Join} />\n                  <Route exact path=\"/\" component={Main} />\n                </Switch>\n              </Content>\n              <BackTop>\n                <Button\n                  type=\"primary\"\n                  shape=\"circle\"\n                  className=\"btn-top-move\"\n                  icon={<antIcon.AiOutlineArrowUp />}\n                />\n              </BackTop>\n            </div>\n          </Layout>\n        </Layout>\n      </>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\reportWebVitals.js",[],"C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\redux\\reducers\\index.js",[],"C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\redux\\reducers\\user_reducer.js",[],"C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\redux\\actions\\types.js",[],"C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\firebase.js",[],"C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\component\\Join.js",[],"C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\component\\Loading.js",[],"C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\redux\\actions\\user_action.js",[],"C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\component\\Login.js",["67","68"],"import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport firebase from \"../firebase\";\r\nimport { Button, Input } from \"antd\";\r\nimport styled from \"styled-components\";\r\nexport const ModalPopup = styled.div`\r\n  width: 100%;\r\n  max-width: 350px;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  position: fixed;\r\n  z-index: 100;\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.25);\r\n  transform: translate(-50px, -100%);\r\n  left: ${(props) => props.posx}px;\r\n  top: ${(props) => props.posy}px;\r\n  @media all and (max-width: 640px) {\r\n    width: 80%;\r\n    max-width: 400px;\r\n    left: 50%;\r\n    transform: translate(-50%, -100%);\r\n  }\r\n`;\r\n\r\nfunction Login() {\r\n  const { register, errors, handleSubmit } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      await firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(data.email, data.password);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setErrorFromSubmit(error.message);\r\n      setLoading(false);\r\n      setTimeout(() => {\r\n        setErrorFromSubmit(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n  const [errorFromSubmit, setErrorFromSubmit] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [InputEmail, setInputEmail] = useState(false);\r\n  const [InputPw, setInputPw] = useState(false);\r\n  const onInputEmail = (e) => {\r\n    setInputEmail(e.target.value);\r\n  };\r\n  const onInputPw = (e) => {\r\n    setInputPw(e.target.value);\r\n  };\r\n\r\n  const [PwChangeInput, setPwChangeInput] = useState('')\r\n  const OnPwChangeInput = (e) => {\r\n    setPwChangeInput(e.target.value)\r\n  }\r\n  const onPwChange = () => {\r\n    const auth = firebase.auth();\r\n    const emailAddress = PwChangeInput\r\n    console.log(emailAddress)\r\n    auth.sendPasswordResetEmail(emailAddress).then(function() {\r\n      alert('이메일로 비밀번호 변경 링크를 발송했습니다.')\r\n      onPwModal();\r\n    }).catch(function(error) {\r\n      alert('해당 이메일로 가입된 유저가 없습니다.')\r\n    });    \r\n  }\r\n\r\n  const [PwModal, setPwModal] = useState(false)\r\n  const onPwModal = () => {\r\n    setPwModal(!PwModal)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"join-form-wrap\">\r\n        <form className=\"join-form\" onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"input-box\">\r\n            <input\r\n              name=\"email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              onChange={onInputEmail}\r\n              ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\r\n            />\r\n            <label\r\n              htmlFor=\"email\"\r\n              className={\"place-holder \" + (InputEmail && \"on\")}\r\n            >\r\n              <span>이메일</span>\r\n            </label>          \r\n          </div>\r\n          <div className=\"input-box\">\r\n            <input\r\n              type=\"password\"\r\n              onChange={onInputPw}\r\n              name=\"password\"\r\n              id=\"password\"\r\n              ref={register({ required: true, minLength: 6 })}\r\n            />\r\n            <label\r\n              htmlFor=\"password\"\r\n              className={\"place-holder \" + (InputPw && \"on\")}\r\n            >\r\n              <span>비밀번호</span>\r\n            </label>\r\n            {errors.password && errors.password.type === \"required\" && (\r\n              <p>비밀번호를 입력해 주세요</p>\r\n            )}\r\n            {errors.password && errors.password.type === \"minLength\" && (\r\n              <p>비밀번호는 6글자 이상이어야 합니다.</p>\r\n            )}\r\n            {errorFromSubmit && <p>{errorFromSubmit}</p>}\r\n          </div>\r\n          <input type=\"submit\" value=\"로그인\" disabled={loading} />\r\n        </form>\r\n        <div style={{position:\"relative\",marginTop:\"10px\"}}>\r\n          <a href=\"javascript:;\" onClick={onPwModal}>비밀번호를 잊어버렸을때</a>\r\n          {\r\n            PwModal &&\r\n            <ModalPopup>\r\n              <h3 style={{fontWeight:\"bold\",textAlign:\"center\"}}>비밀번호 재설정</h3>\r\n              <Input placeholder=\"가입했던 이메일을 입력해 주세요\" type=\"text\" value={PwChangeInput} onChange={OnPwChangeInput} />\r\n              <div className=\"flex-box j-center\" style={{marginTop:\"10px\"}}>\r\n                <Button type=\"primary\" style={{marginRight:\"5px\"}} onClick={onPwChange}>이메일로 전송</Button>\r\n                <Button onClick={onPwModal}>닫기</Button>\r\n              </div>\r\n            </ModalPopup>\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\component\\Main.js",[],"C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\component\\AddPop.js",["69","70"],"import React, { useState } from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport firebase from \"../firebase\"\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const AddpopBox = styled.div`\r\n  width:auto;min-width:300px;max-width:500px;\r\n  padding:20px;\r\n`\r\n\r\n\r\nfunction AddPop(props) {\r\n  const { register, handleSubmit, watch, errors } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const onAddPopSubmit =  async (data) => {\r\n    try {     \r\n      let overlap = props.WordArray.find(el => {\r\n        return el.name === data.name;\r\n      });\r\n      if(!overlap){\r\n      await firebase.database()\r\n      .ref(\"word_list\")\r\n      .child(data.name)\r\n      .set({\r\n        uid: uuid(),\r\n        ...data\r\n      })\r\n    }else{\r\n      alert(\"이미 등록된 단어 입니다.\")\r\n    }\r\n  }catch (error) {\r\n      console.error('error')\r\n    }\r\n  };\r\n\r\n  watch(\"name\");\r\n\r\n  return (\r\n    <>\r\n      <AddpopBox>\r\n        <form onSubmit={handleSubmit(onAddPopSubmit)}>\r\n            <input name=\"name\" ref={register} /> \r\n            <textarea name=\"desc\" ref={register} />\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n        </form>\r\n      </AddpopBox>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddPop\r\n","C:\\Users\\ROK\\Desktop\\프로젝트\\react\\cra-word\\src\\component\\WordList.js",["71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":18,"column":9,"nodeType":"78","messageId":"79","endLine":18,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":34,"column":6,"nodeType":"82","endLine":34,"endColumn":8,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":39,"column":10,"nodeType":"78","messageId":"79","endLine":39,"endColumn":20},{"ruleId":"85","severity":1,"message":"86","line":123,"column":11,"nodeType":"87","endLine":123,"endColumn":54},{"ruleId":"88","severity":1,"message":"89","line":123,"column":19,"nodeType":"90","messageId":"91","endLine":123,"endColumn":33},{"ruleId":"76","severity":1,"message":"92","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"93","line":15,"column":42,"nodeType":"78","messageId":"79","endLine":15,"endColumn":48},{"ruleId":"76","severity":1,"message":"92","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":24},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Sider' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["96"],"'TopFixLeft' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'useState' is defined but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [dispatch, history]",{"range":"99","text":"100"},[1053,1055],"[dispatch, history]"]